{"version":3,"file":"static/js/936.a3524182.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/FilmCard/FilmCard.module.css?23a1","components/FilmCard/FilmCard.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"FilmCard_item__A1bda\",\"image\":\"FilmCard_image__VWLwf\",\"title\":\"FilmCard_title__ztWsR\",\"rating\":\"FilmCard_rating__MZ4QO\",\"wrapper\":\"FilmCard_wrapper__wRqCB\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './FilmCard.module.css';\n\n\nexport const FilmCard = ({ image, title, rating, id }) => {\n  const location = useLocation();\n  return (\n    <li>\n      <Link\n        state={{ from: location }}\n        to={`/movies/${id}`}\n        className={css.item}\n      >\n        <img className={css.image} src={image} alt={title} />\n        <div className={css.wrapper}>\n          <h3 className={css.title}>{title}</h3>\n          <p className={css.rating}>\n            Rating: <span>{rating}</span>\n          </p>\n        </div>\n      </Link>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filmList\":\"Home_filmList__mm0gC\",\"title\":\"Home_title__L087v\",\"dayTop\":\"Home_dayTop__gUbY9\",\"dayImage\":\"Home_dayImage__1R-UE\"};","import css from './Home.module.css';\nimport { useEffect, useState } from 'react';\nimport { getTrendings, getTrendingsDay } from '../../services/api';\nimport { FilmCard } from 'components/FilmCard/FilmCard';\nimport { Link } from 'react-router-dom';\nimport imagePlaceholder from '../../images/film-poster-placeholder.png';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [dayTrends, setDayTrends] = useState([]);\n  const [error, setError] = useState('');\n\n  const topTen = arr => {\n    const sortedTrends = arr\n      .sort(\n        (firstFilm, secondFilmt) =>\n          firstFilm.vote_average - secondFilmt.vote_average\n      )\n      .slice(0, 10);\n    return sortedTrends;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responce = await getTrendings();\n        setTrendMovies(responce.data.results);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    const fetchTrendDay = async () => {\n      try {\n        const responce = await getTrendingsDay();\n\n        setDayTrends(topTen(responce.data.results));\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchTrendDay();\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n  console.log(error);\n  return (\n    <>\n      <h2 className={css.title}>Today's top 10 movies</h2>\n      <ul className={css.dayTop}>\n        {dayTrends.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} className={css.item}>\n              <img\n                className={css.dayImage}\n                src={\n                  `https://image.tmdb.org/t/p/w300/${movie.poster_path}` !==\n                  `https://image.tmdb.org/t/p/w300/null`\n                    ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                    : imagePlaceholder\n                }\n                alt={movie.title || movie.name}\n              />\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <h2 className={css.title}>Trending this week</h2>\n      <ul className={css.filmList}>\n        {trendMovies.map(movie => (\n          <FilmCard\n            key={movie.id}\n            id={movie.id}\n            image={\n              `https://image.tmdb.org/t/p/w300/${movie.poster_path}` !==\n              `https://image.tmdb.org/t/p/w300/null`\n                ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                : imagePlaceholder\n            }\n            title={movie.title || movie.name}\n            rating={movie.vote_average}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '087b3a8cac1b0930cef8c04cbd521bfb';\n\nexport const getTrendingsDay = async () => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return responce;\n};\n\nexport const getTrendings = async () => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}`\n  );\n  return responce;\n};\n\nexport const getByName = async (query, page) => {\n  const responce = await axios.get(\n    `\nhttps://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return responce;\n};\n\nexport const getMovieInfo = async movieId => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce;\n};\n\nexport const getReviews = async movieId => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return responce;\n};\n\nexport const getCast = async movieId => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return responce;\n};\n"],"names":["FilmCard","image","title","rating","id","location","useLocation","state","from","to","className","css","src","alt","useState","trendMovies","setTrendMovies","dayTrends","setDayTrends","error","setError","useEffect","fetchData","getTrendings","responce","data","results","fetchTrendDay","getTrendingsDay","sort","firstFilm","secondFilmt","vote_average","slice","console","log","map","movie","poster_path","imagePlaceholder","name","API_KEY","axios","getByName","query","page","getMovieInfo","movieId","getReviews","getCast"],"sourceRoot":""}